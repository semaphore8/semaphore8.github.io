{"version":3,"sources":["Components/Navigation/DropdownGroups.js","Components/Navigation/DropdownWeeks.js","Components/Navigation/WeeksSwitch.js","Utils/GetWeekNumber.js","Utils/GetWeeksDays.js","Components/Body/ScheduleCellWithContent.js","Components/Body/ScheduleRowWithContent.js","Components/Body/ScheduleCellWithWeekDays.js","AppConfig.js","App/App.js","Utils/GetMonthsNames.js","Admin/Components/RadioButtonsGroup.js","Admin/Components/ComboBox.js","Admin/Components/LoadsTable.js","Admin/Components/Select.js","Utils/GetFreeScheduleSlotsArray.js","Context/Auth.js","Admin/Admin.js","Utils/AddClassroomAvailabilityToScheduleFreeSlotsArray.js","serviceWorker.js","PrivateRoute.js","Login/Login.js","index.js"],"names":["DropdownGroups","props","state","selected_group","selected_group_fulltime","handleChange","bind","event","this","study_mode","setState","target","value","getGroupFromDropdown","menuItemStyle","height","fontFamily","fontSize","padding","selectStyle","width","FormControl","Select","labelId","id","onChange","displayEmpty","style","MenuItem","groups_distance","map","group","name","key","groups_fulltime","React","Component","DropdownWeeks","selected_week","selected_week_fulltime","handleChangeFulltime","changeSelectedWeek","getWeekFromDropdown","getWeekFromDropdownFulltime","week","weeks","weeks_fulltime","parity","Switches","useState","checkedB","className","role","aria-label","Switch","checked","getStudyModeFromSwitch","color","inputProps","getWeekNumber","date","onejan","Date","getFullYear","Math","ceil","getDay","getWeeksDays","d","days","parse","push","wday","toLocaleDateString","weekday","wday_en","day","getDate","toISOString","slice","i","setDate","ScheduleCellWithContent","lesson","lessons","find","date_day","class_number","study_group","week_parity","free_slots_array","slotInfo","classes","filter","cl","number","tip","result_tip","classroom_is_free","speaker_is_free","class_in_streak","classes_count","calcTip","Tooltip","title","arrow","classnumber","weekparity","onClick","handleChangeDate","handleChangeClassnumber","handleChangeDay","ScheduleRowWithContent","row_number","t","roman","begin","end","slot","ScheduleCellWithWeekDays","now","current_week_parity","join","class_timetable","ApiURI","App","lessons_distance","lessons_fulltime","groupsIsLoaded","weeksIsLoaded","lessons_distanceIsLoaded","lessons_fulltimeIsLoaded","error_in_groups","error_in_weeks","error_in_lessons_distance","error_in_lessons_fulltime","myRef","createRef","getDataFromAPI","fetch","then","response","json","result","mode_of_study","handleTodayClick","current_week","current","alert","changeSelectedWeekFulltime","handleRightArrowClick","next_week","handleLeftArrowClick","prev_week","months","d1","d2","length","getMonth","month","getMonthsNames","e","message","text","ref","src","alt","to","href","rel","RadioButtonsGroup","component","FormLabel","label","RadioGroup","termValue","row","choices","term","FormControlLabel","control","Radio","labelPlacement","ComboBox","Autocomplete","autoHighlight","clearText","noOptionsText","options","getOptionLabel","disableClearable","renderInput","params","TextField","variant","SimpleTable","useStyles","TableContainer","root","Paper","marginTop","Table","table","TableHead","TableRow","TableCell","titles","align","loads","TableBody","load","index","scope","subject_name","s_type","hours_count","subject","selectedTerm","weeks_count_distance","weeks_count_fulltime","SimpleSelect","formControl","disabled","InputLabel","values","getFreeScheduleSlotsArray","studyMode","selectedWeekParity","speakerClassesDistance","speakerClassesFulltime","speakerBlockedSlotsDistance","speakerBlockedSlotsFulltime","res","l","c","parseInt","s","toString","AuthContext","createContext","useAuth","useContext","Admin","authTokens","loadTableStyles","makeStyles","maxWidth","selectStyles","theme","marginRight","spacing","minWidth","selectEmpty","selectedGroup","setSelectedGroup","groupChoices","setGroupChoices","setSelectedTerm","termChoices","setTermChoices","setLoads","setLessons","selectedWeek","setSelectedWeek","setSelectedWeekParity","setDays","selectedSubject","setSelectedSubject","selectedSpeaker","setSelectedSpeaker","selectedClassroom","setSelectedClassroom","speakerChoices","setSpeakerChoices","classroomChoices","setClassroomChoices","setSpeakerClassesDistance","setSpeakerClassesFulltime","setSpeakerBlockedSlotsDistance","setSpeakerBlockedSlotsFulltime","scheduleFreeSlotsArray","setScheduleFreeSlotsArray","selectedDate","setSelectedDate","selectedDay","setSelectedDay","selectedClassnumber","setSelectedClassnumber","scheduleUpdated","setScheduleUpdated","setAuthTokens","attributes","handleDateDelete","handleDayDelete","handleClassnumberDelete","clearSelectedSlot","subjectInfoLoading","setSubjectInfoLoading","speakerDataLoaded","setSpeakerDataLoaded","setSpeakerDataLoading","groupsAndTermsLoading","setGroupsAndTermsLoading","useEffect","a","fetchData","speaker_list","classrooms_list","speaker","speaker_info","group_lessons","selectedWeekNumber","updated_days","classroom","addClassroomAvailabilityToScheduleFreeSlotsArray","localStorage","setItem","option","elevation","Chip","onDelete","margin","alignSelf","Button","data","request","console","log","JSON","stringify","Request","method","body","headers","catch","error","random","Typography","display","Boolean","window","location","hostname","match","PrivateRoute","rest","render","pathname","referer","textAlign","position","top","left","transform","header","marginBottom","content","paddingBottom","bodyText","input","cardActions","justifyContent","Login","isLoggedIn","setLoggedIn","isError","setIsError","setError","userName","setUserName","password","setPassword","undefined","credsEmpty","setCredsEmpty","Alert","severity","Card","raised","noValidate","autoComplete","onSubmit","preventDefault","axios","post","status","access","CardHeader","CardContent","gutterBottom","autoFocus","required","size","type","CardActions","Routing","getItem","Provider","exact","path","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54e8193e.chunk.js","sourcesContent":["import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass DropdownGroups extends React.Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected_group: '',\r\n      selected_group_fulltime: '',\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  \r\n  handleChange(event) {\r\n    if (this.props.study_mode === 'distance')\r\n    this.setState({\r\n      selected_group: event.target.value\r\n    })\r\n    else if (this.props.study_mode === 'fulltime')\r\n    this.setState({\r\n      selected_group_fulltime: event.target.value\r\n    });\r\n    this.props.getGroupFromDropdown(event.target.value);\r\n  };\r\n  \r\n  render() {\r\n    const menuItemStyle = {\r\n      // width: 90,\r\n      height: 36,\r\n      fontFamily: 'Roboto',\r\n      fontSize: '14px',\r\n      padding: '5px'\r\n    };\r\n    \r\n    const selectStyle = {\r\n      width: 100,\r\n      height: 36,\r\n      fontFamily: 'Roboto',\r\n      fontSize: '14px',\r\n    };\r\n\r\n    return (\r\n      <div>\r\n      <FormControl>\r\n        {\r\n          this.props.study_mode === 'distance' &&\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={this.state.selected_group}\r\n          onChange={this.handleChange}\r\n          displayEmpty \r\n          style={selectStyle}\r\n        >\r\n        <MenuItem value=\"\" style={menuItemStyle}>\r\n            <em>Группа</em>\r\n        </MenuItem>\r\n        {this.props.groups_distance.map((group) => (\r\n          <MenuItem \r\n          value={group.name} \r\n          key={group.name}\r\n          style={menuItemStyle}\r\n          >\r\n          {group.name}\r\n          </MenuItem>\r\n          ))\r\n        }\r\n        )\r\n        </Select>\r\n        }\r\n        {\r\n          this.props.study_mode === 'fulltime' &&\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={this.state.selected_group_fulltime}\r\n          onChange={this.handleChange}\r\n          displayEmpty \r\n          style={selectStyle}\r\n        >\r\n        <MenuItem value=\"\" style={menuItemStyle}>\r\n            <em>Группа</em>\r\n        </MenuItem>\r\n        {this.props.groups_fulltime.map((group) => (\r\n          <MenuItem \r\n          value={group.name} \r\n          key={group.name}\r\n          style={menuItemStyle}\r\n          >\r\n          {group.name}\r\n          </MenuItem>\r\n          ))\r\n        }\r\n        )\r\n        </Select>\r\n        }\r\n      </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropdownGroups;","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass DropdownWeeks extends React.Component{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected_week: '',\r\n      selected_week_fulltime: '',\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChangeFulltime = this.handleChangeFulltime.bind(this);\r\n    this.changeSelectedWeek = this.changeSelectedWeek.bind(this);\r\n  }\r\n  \r\n  handleChange(event) {\r\n    this.setState({\r\n      selected_week: event.target.value,\r\n    });\r\n    this.props.getWeekFromDropdown(event.target.value);\r\n  };\r\n\r\n  handleChangeFulltime(event) {\r\n    this.setState({\r\n      selected_week_fulltime: event.target.value,\r\n    });\r\n    this.props.getWeekFromDropdownFulltime(event.target.value);\r\n  };\r\n  \r\n  changeSelectedWeek(week) {\r\n    this.setState({\r\n      selected_week: week,\r\n    });\r\n    this.props.getWeekFromDropdown(week);\r\n  }\r\n\r\n  changeSelectedWeekFulltime(week) {\r\n    this.setState({\r\n      selected_week_fulltime: week,\r\n    });\r\n    this.props.getWeekFromDropdownFulltime(week);\r\n  }\r\n  \r\n  render() {\r\n    const menuItemStyle = {\r\n      height: 36,\r\n      fontFamily: 'Roboto',\r\n      fontSize: '14px',\r\n      padding: '5px'\r\n    };\r\n    \r\n    const selectStyle = {\r\n      width: 100,\r\n      height: 36,\r\n      fontFamily: 'Roboto',\r\n      fontSize: '14px',\r\n    };\r\n\r\n    return (\r\n      <div>\r\n      <FormControl>\r\n        {\r\n          this.props.study_mode === 'distance' &&\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={this.state.selected_week}\r\n              onChange={this.handleChange}\r\n              displayEmpty \r\n              style={selectStyle}\r\n            >\r\n            <MenuItem value=\"\" style={menuItemStyle}>\r\n                <em>Неделя</em>\r\n            </MenuItem>\r\n            {this.props.weeks.map((week) => (\r\n              <MenuItem \r\n              value={week.week} \r\n              key={week.week}\r\n              style={menuItemStyle}\r\n              >{week.week}</MenuItem>\r\n              ))\r\n            }\r\n            </Select>\r\n        }\r\n        {\r\n          this.props.study_mode === 'fulltime' &&\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={this.state.selected_week_fulltime}\r\n              onChange={this.handleChangeFulltime}\r\n              displayEmpty \r\n              style={selectStyle}\r\n            >\r\n            <MenuItem value=\"\" style={menuItemStyle}>\r\n                <em>Неделя</em>\r\n            </MenuItem>\r\n            {this.props.weeks_fulltime.map((week) => (\r\n              <MenuItem \r\n              value={week.value} \r\n              key={week.value}\r\n              style={menuItemStyle}\r\n              >{week.parity}</MenuItem>\r\n              ))\r\n            }\r\n            </Select>\r\n        }\r\n      </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropdownWeeks;","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function Switches(props) {\r\n  const [state, setState] = React.useState({\r\n    checkedB: true,\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    props.getStudyModeFromSwitch(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div className='SwitchWrapper'>\r\n    <span className='SwitchLabel'>Дневное <span role=\"img\" aria-label=\"Univercity\">🏛️</span></span>\r\n      <Switch\r\n        checked={state.checkedB}\r\n        onChange={handleChange}\r\n        color=\"primary\"\r\n        name=\"checkedB\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n      <span className='SwitchLabel'><span role=\"img\" aria-label=\"Bus\">🚌</span> Заочное</span>\r\n    </div>\r\n  );\r\n}\r\n","// returns current week number\r\n\r\nconst getWeekNumber = (date) => {\r\n    let onejan = new Date(date.getFullYear(), 0, 1);\r\n    let week = Math.ceil( (((date - onejan) / 86400000) + onejan.getDay() + 1) / 7 );\r\n    return week\r\n};\r\n\r\nexport default getWeekNumber","// for selected (or current if no selected) week returns an array with day's numbers, weekdays and dates\r\n// 0: {wday: \"пн\", wday_en: \"Mon\", day: 23, date: \"2020-03-23\"}\r\n// 1: {wday: \"вт\", wday_en: \"Tue\", day: 24, date: \"2020-03-24\"}\r\n// 2: {wday: \"ср\", wday_en: \"Wed\", day: 25, date: \"2020-03-25\"}\r\n// 3: {wday: \"чт\", wday_en: \"Thu\", day: 26, date: \"2020-03-26\"}\r\n// 4: {wday: \"пт\", wday_en: \"Fri\", day: 27, date: \"2020-03-27\"}\r\n// 5: {wday: \"сб\", wday_en: \"Sat\", day: 28, date: \"2020-03-28\"}\r\n\r\n\r\n\r\nexport default function getWeeksDays(selected_week, study_mode) {\r\n    var days = [];\r\n    var d;\r\n    // var wd; // week day\r\n    if (selected_week !== '' && study_mode === 'distance') {\r\n        d = new Date(Date.parse(selected_week));\r\n        // wd = d.toLocaleDateString('RU-ru', { weekday: 'short' });\r\n        days.push({\r\n            wday: d.toLocaleDateString('RU-ru', { weekday: 'short' }),\r\n            wday_en: d.toLocaleDateString('en-US', { weekday: 'short' }),\r\n            day: d.getDate(),\r\n            date: d.toISOString().slice(0,10),\r\n        });\r\n        for (let i=0; i<5; i++) {\r\n            d.setDate(d.getDate()+1)\r\n            // wd = d.toLocaleDateString('RU-ru', { weekday: 'short' });\r\n            days.push({\r\n                wday: d.toLocaleDateString('RU-ru', { weekday: 'short' }),\r\n                wday_en: d.toLocaleDateString('en-US', { weekday: 'short' }),\r\n                day: d.getDate(),\r\n                date: d.toISOString().slice(0,10),\r\n            });\r\n        };\r\n    }\r\n    else {\r\n        d = new Date();\r\n        if (d.getDay() !== 0) \r\n        d.setDate(d.getDate()-(d.getDay()-1))\r\n        else\r\n        d.setDate(d.getDate()-6);\r\n        // wd = d.toLocaleDateString('RU-ru', { weekday: 'short' });\r\n        days.push({\r\n            wday: d.toLocaleDateString('RU-ru', { weekday: 'short' }),\r\n            wday_en: d.toLocaleDateString('en-US', { weekday: 'short' }),\r\n            day: d.getDate(),\r\n            date: d.toISOString().slice(0,10),\r\n        });\r\n        for (let i=0; i<5; i++) {\r\n            d.setDate(d.getDate()+1);\r\n            // wd = d.toLocaleDateString('RU-ru', { weekday: 'short' });\r\n            days.push({\r\n                wday: d.toLocaleDateString('RU-ru', { weekday: 'short' }),\r\n                wday_en: d.toLocaleDateString('en-US', { weekday: 'short' }),\r\n                day: d.getDate(),\r\n                date: d.toISOString().slice(0,10),\r\n            });\r\n        };\r\n    }\r\n    return days\r\n}","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nexport default function ScheduleCellWithContent(props) {\r\n    if (props.study_mode === 'distance') {\r\n        var lesson = props.lessons.find(lesson => lesson.date_day === props.day.date && lesson.class_number === props.class_number && lesson.study_group === props.selected_group)\r\n    } else if (props.study_mode === 'fulltime') {\r\n        var lesson = props.lessons.find(lesson => lesson.week_parity === props.selected_week_fulltime && lesson.day === props.day.wday_en && lesson.class_number === props.class_number && lesson.study_group === props.selected_group_fulltime)\r\n    }\r\n\r\n    if (props.free_slots_array) var slotInfo = props.free_slots_array[0].classes.filter(cl => cl.number === props.class_number);\r\n    \r\n    function handleClick(event) {\r\n        props.study_mode === 'distance' && \r\n        props.handleChangeDate(event.target)\r\n        props.handleChangeClassnumber(event.target)\r\n        props.study_mode === 'fulltime' && \r\n        props.handleChangeClassnumber(event.target)\r\n        props.handleChangeDay(event.target)\r\n    }\r\n\r\n    function calcTip(props, slotInfo) {\r\n        var result_tip = \"\";\r\n        if (!slotInfo[0].lesson) {\r\n            if (slotInfo[0].classroom_is_free === false) result_tip += \"Аудитория занята\\n\";\r\n            if (slotInfo[0].speaker_is_free === false) result_tip += \"Преподаватель занят\\n\";\r\n            if (slotInfo[0].class_in_streak === false) result_tip += \"Занятия должны идти подряд\\n\";\r\n            if (props.free_slots_array[0].classes_count === 4) result_tip += \"Максимум 4 пары в день\\n\";\r\n            if ((props.free_slots_array[0].classes_count === 0 || slotInfo[0].class_in_streak) && slotInfo[0].classroom_is_free && slotInfo[0].speaker_is_free && props.free_slots_array[0].classes_count < 4) result_tip += \"Ячейка свободна\\n\";\r\n        }\r\n        return result_tip;\r\n    }\r\n\r\n    var tip = props.free_slots_array ? calcTip(props, slotInfo) : \"\"\r\n\r\n    return(\r\n            <Tooltip title={tip} arrow>\r\n                <div \r\n                    className=\"Schedule-cell\" \r\n                    key={props.class_number + props.day.wday} \r\n                    date={props.study_mode === 'distance' ? props.day.date : ''} \r\n                    classnumber={props.class_number} \r\n                    day={props.study_mode === 'fulltime' ? props.day.wday_en : ''} \r\n                    weekparity={props.study_mode === 'fulltime' ? props.selected_week_fulltime : ''}\r\n                    id={\r\n                    props.free_slots_array &&\r\n                    (((props.free_slots_array[0].classes_count === 0 || slotInfo[0].class_in_streak) && slotInfo[0].classroom_is_free && !slotInfo[0].lesson && slotInfo[0].speaker_is_free && props.free_slots_array[0].classes_count < 4) ? \"active\" : \"passive\")\r\n                    }\r\n                    onClick={\r\n                        props.free_slots_array && \r\n                        (((props.free_slots_array[0].classes_count === 0 || slotInfo[0].class_in_streak) && slotInfo[0].classroom_is_free && !slotInfo[0].lesson && slotInfo[0].speaker_is_free && props.free_slots_array[0].classes_count < 4) ? handleClick : null)\r\n                    }\r\n                >\r\n                    {\r\n                        lesson && \r\n                        <div className=\"Schedule-cell-content\">\r\n                            <div className=\"Lesson-subject\">\r\n                                {lesson['subject']['name']}  \r\n                            </div>\r\n                            <div className=\"Lesson-speaker\">\r\n                                {lesson['speaker']} \r\n                            </div>\r\n                            <div className=\"Lesson-classroom\">\r\n                            {lesson['subject']['s_type']} {lesson['classroom']}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    }\r\n                </div>\r\n            </Tooltip>\r\n    )\r\n}","import React from 'react';\r\nimport ScheduleCellWithContent from './ScheduleCellWithContent'\r\n\r\nexport default function ScheduleRowWithContent(props) {\r\n    return (\r\n        <div className=\"Schedule-row\" id={props.row_number}>\r\n        <div className=\"Schedule-cell\" id=\"left\"><span>\r\n            <big>{props.t.roman}</big> {props.t.begin} - {props.t.end}</span>\r\n        </div>\r\n        {\r\n            props.days.map(day => \r\n                <ScheduleCellWithContent \r\n                    key={props.row_number + day.day}\r\n                    class_number={props.row_number}\r\n                    lessons={props.lessons}\r\n                    study_mode={props.study_mode}\r\n                    day={day}\r\n                    selected_group={props.selected_group}\r\n                    selected_group_fulltime={props.selected_group_fulltime}\r\n                    selected_week_fulltime={props.selected_week_fulltime}\r\n                    free_slots_array={props.free_slots_array && props.free_slots_array.filter(slot => slot.date === day.date)}\r\n                    handleChangeDate={props.handleChangeDate}\r\n                    handleChangeDay={props.handleChangeDay}\r\n                    handleChangeClassnumber={props.handleChangeClassnumber}\r\n                />\r\n        )    \r\n        }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport getWeekNumber from '../../Utils/GetWeekNumber'\r\n\r\nexport default function ScheduleCellWithWeekDays(props) {\r\n    let date = new Date();\r\n    let now = new Date();\r\n    let current_week = getWeekNumber(now);\r\n    let current_week_parity = current_week % 2 === 0 ? 'even' : 'uneven';\r\n\r\n    return( \r\n            <div \r\n                className={[\"Schedule-cell\", ((props.day.date === date.toISOString().slice(0,10) && props.study_mode === 'distance') || (props.day.date === date.toISOString().slice(0,10) && current_week_parity === props.selected_week_fulltime)) ? \"Schedule-cell-weekday-today\" : \"Schedule-cell-weekday\"].join(' ')} \r\n                key={props.day.day}\r\n            >\r\n            <div className={props.study_mode === 'distance' ? \"wday\" : \"wday_big\"}>\r\n                <div className={props.study_mode === 'distance' ? \"\" : \"wday_big_text\"}>\r\n                    {props.day.wday}\r\n                </div>\r\n            </div>\r\n            {\r\n                props.study_mode === 'distance' &&\r\n                    <div className=\"day\">\r\n                        <div className=\"day_text\">\r\n                            {props.day.day}\r\n                        </div>\r\n                    </div>\r\n            }\r\n            </div>\r\n    )\r\n    \r\n\r\n}","export const class_timetable = [\r\n    {\r\n        id: '1', roman: 'I', begin: '8:00', end: '9:35'\r\n    },\r\n    {\r\n        id: '2', roman: 'II', begin: '9:45', end: '11:20'\r\n    },\r\n    {\r\n        id: '3', roman: 'III', begin: '12:00', end: '13:35'\r\n    },\r\n    {\r\n        id: '4', roman: 'IV', begin: '13:45', end: '15:20'\r\n    },\r\n    {\r\n        id: '5', roman: 'V', begin: '15:30', end: '17:05'\r\n    },\r\n    {\r\n        id: '6', roman: 'VI', begin: '17:15', end: '18:50'\r\n    },\r\n]\r\n\r\nexport const ApiURI = 'https://schedule-nngu.herokuapp.com'","import React from 'react';\r\nimport './Body.css';\r\nimport './Footer.css';\r\nimport './Header.css';\r\nimport DropdownGroups from '../Components/Navigation/DropdownGroups';\r\nimport DropdownWeeks from '../Components/Navigation/DropdownWeeks';\r\nimport WeeksSwitch from '../Components/Navigation/WeeksSwitch';\r\nimport getWeekNumber from '../Utils/GetWeekNumber';\r\nimport getMonthsNames from '../Utils/GetMonthsNames';\r\nimport getWeeksDays from '../Utils/GetWeeksDays';\r\nimport ScheduleRowWithContent from '../Components/Body/ScheduleRowWithContent';\r\nimport ScheduleCellWithWeekDays from '../Components/Body/ScheduleCellWithWeekDays';\r\nimport { ApiURI, class_timetable } from '../AppConfig';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        groups_distance: [],\r\n        groups_fulltime: [],\r\n        weeks: [],\r\n        lessons_distance: [],\r\n        lessons_fulltime: [],\r\n        groupsIsLoaded: false,\r\n        weeksIsLoaded: false,\r\n        lessons_distanceIsLoaded: false,\r\n        lessons_fulltimeIsLoaded: false,\r\n        error_in_groups: null,\r\n        error_in_weeks: null,\r\n        error_in_lessons_distance: null,\r\n        error_in_lessons_fulltime: null,\r\n        selected_week: '',\r\n        selected_week_fulltime: '',\r\n        selected_group: '',\r\n        selected_group_fulltime: '',\r\n        study_mode: 'distance',\r\n    };\r\n\r\n    weeks_fulltime = [\r\n            {parity: 'Чётная', value: 'even'},\r\n            {parity: 'Нечётная', value: 'uneven'},\r\n        ];\r\n        \r\n    myRef = React.createRef();\r\n    \r\n    getStudyModeFromSwitch = study_mode => {\r\n        if (study_mode === true) {\r\n            this.setState({study_mode: 'distance'});\r\n        } \r\n        else if (study_mode === false) {\r\n            this.setState({study_mode: 'fulltime'});\r\n        }\r\n    }\r\n\r\n    getWeekFromDropdown = selected_week => {\r\n        this.setState({selected_week: selected_week})\r\n    }\r\n\r\n    getWeekFromDropdownFulltime = selected_week => {\r\n        this.setState({selected_week_fulltime: selected_week})\r\n    }\r\n    \r\n    getGroupFromDropdown = selected_group => {\r\n        if (this.state.study_mode === 'distance')\r\n        this.setState({selected_group: selected_group})\r\n        else if (this.state.study_mode === 'fulltime')\r\n        this.setState({selected_group_fulltime: selected_group})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromAPI();\r\n    }\r\n    \r\n    getDataFromAPI = () => {\r\n        fetch(ApiURI + '/groups/')\r\n        .then(response => response.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    groups_distance: result.filter(group => group.mode_of_study === 'distance'),\r\n                    groups_fulltime: result.filter(group => group.mode_of_study === 'fulltime'),\r\n                    groupsIsLoaded: true,\r\n                });\r\n            },\r\n            (error_in_groups) => {\r\n                this.setState({\r\n                    groupsIsLoaded: true,\r\n                    error_in_groups\r\n                });\r\n            }\r\n            );\r\n            \r\n        fetch(ApiURI + '/weeks/')\r\n        .then(response => response.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    weeks: result,\r\n                    weeksIsLoaded: true,\r\n                });\r\n            },\r\n            (error_in_weeks) => {\r\n                this.setState({\r\n                    weeksIsLoaded: true,\r\n                    error_in_weeks\r\n                });\r\n            }\r\n            );\r\n        \r\n    \r\n        fetch(ApiURI + '/lessons_distance/')\r\n        .then(response => response.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    lessons_distance: result,\r\n                    lessons_distanceIsLoaded: true,\r\n                });\r\n            },\r\n            (error_in_lessons_distance) => {\r\n                this.setState({\r\n                    lessons_distanceIsLoaded: true,\r\n                    error_in_lessons_distance\r\n                });\r\n            }\r\n            );\r\n\r\n        fetch(ApiURI + '/lessons_fulltime/')\r\n        .then(response => response.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    lessons_fulltime: result,\r\n                    lessons_fulltimeIsLoaded: true,\r\n                });\r\n            },\r\n            (error_in_lessons_fulltime) => {\r\n                this.setState({\r\n                    lessons_fulltimeIsLoaded: true,\r\n                    error_in_lessons_fulltime\r\n                });\r\n            }\r\n            );\r\n\r\n        \r\n        }\r\n\r\n    handleTodayClick = () => {\r\n        if (this.state.study_mode === 'distance') {\r\n            let current_week = this.state.weeks.find((week) => week.current);\r\n            current_week ?\r\n            this.myRef.current.changeSelectedWeek(current_week.week)\r\n            :\r\n            alert('Текущая неделя не найдена. Обратитесь к администратору.')\r\n        } else if (this.state.study_mode === 'fulltime') {\r\n            let now = new Date();\r\n            let current_week = getWeekNumber(now);\r\n            if (current_week % 2 === 0) \r\n            this.myRef.current.changeSelectedWeekFulltime('even')\r\n            else if (current_week % 2 === 1) \r\n            this.myRef.current.changeSelectedWeekFulltime('uneven')\r\n        }\r\n    }\r\n    \r\n    handleRightArrowClick = () => {\r\n        if (this.state.study_mode === 'distance') {\r\n            if (this.state.selected_week)  {\r\n            let selected_week = this.state.weeks.find(week => week.week === this.state.selected_week);\r\n            let next_week = this.state.weeks.find(week => week.id === selected_week.id + 1);\r\n            next_week &&\r\n            this.myRef.current.changeSelectedWeek(next_week.week);\r\n            }\r\n        } else if (this.state.study_mode === 'fulltime') {\r\n            if (this.state.selected_week_fulltime === 'even') {\r\n                this.myRef.current.changeSelectedWeekFulltime('uneven');\r\n            } else if (this.state.selected_week_fulltime === 'uneven') {\r\n                this.myRef.current.changeSelectedWeekFulltime('even');\r\n            }\r\n        } \r\n    }\r\n    \r\n\r\n    handleLeftArrowClick = () => {\r\n        if (this.state.study_mode === 'distance') {\r\n            if (this.state.selected_week)  {\r\n            let selected_week = this.state.weeks.find(week => week.week === this.state.selected_week);\r\n            let prev_week = this.state.weeks.find(week => week.id === selected_week.id - 1);\r\n            prev_week &&\r\n            this.myRef.current.changeSelectedWeek(prev_week.week);\r\n            }\r\n        } else if (this.state.study_mode === 'fulltime') {\r\n            if (this.state.selected_week_fulltime === 'even') {\r\n                this.myRef.current.changeSelectedWeekFulltime('uneven');\r\n            } else if (this.state.selected_week_fulltime === 'uneven') {\r\n                this.myRef.current.changeSelectedWeekFulltime('even');\r\n            }\r\n        } \r\n    }\r\n\r\n    render() {\r\n        var days = getWeeksDays(this.state.selected_week, this.state.study_mode); // get an array with day's numbers, weekdays and dates \r\n        var months = getMonthsNames(days); // get an array with months spelling names ['February'] or ['Feb.', '-', 'Mar.']\r\n        const {groups_distance, groups_fulltime, weeks, lessons_distance, lessons_fulltime, groupsIsLoaded, weeksIsLoaded, lessons_distanceIsLoaded, lessons_fulltimeIsLoaded, error_in_groups, error_in_weeks, error_in_lessons_distance, error_in_lessons_fulltime, study_mode, selected_group, selected_week_fulltime, selected_group_fulltime} = this.state;\r\n        \r\n        // check for errors\r\n        for (var l of [weeksIsLoaded, groupsIsLoaded, lessons_distanceIsLoaded, lessons_fulltimeIsLoaded]) {\r\n            if (l === false) {\r\n                return <div className=\"helptext\"><i>Загрузка...</i></div>;\r\n            }\r\n        }\r\n        for (var e of [error_in_groups, error_in_weeks, error_in_lessons_distance, error_in_lessons_fulltime]) {\r\n            if (e != null) {\r\n                return <div className=\"helptext\"><i>Ошибка: {e.message} </i></div>;\r\n            }\r\n        }\r\n        \r\n        // render\r\n        return (\r\n            <div className=\"Main-wrapper\">\r\n                <div className=\"Header\">\r\n                    <div className=\"Hat\">\r\n                        <span role=\"img\" aria-label=\"Logo\">🎓</span>\r\n                    </div>\r\n                    <div className=\"Title\">\r\n                        Расписание\r\n                    </div>\r\n                    <div className=\"Switch\">\r\n                        <WeeksSwitch getStudyModeFromSwitch={this.getStudyModeFromSwitch}/>\r\n                    </div>\r\n                    <div className=\"Today-button\" onClick={this.handleTodayClick}>\r\n                        <button>Сегодня</button>\r\n                    </div>\r\n                    <div className=\"Arrow\">\r\n                        <button onClick={this.handleLeftArrowClick}>&#60;</button>\r\n                    </div>\r\n                    <div className=\"Arrow\">\r\n                        <button onClick={this.handleRightArrowClick}>&#62;</button>\r\n                    </div>\r\n                    <div className=\"Months\">\r\n                        <div>\r\n                            {\r\n                                months.map(month => \r\n                                    month\r\n                                )\r\n                            }   \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Dropdown\">\r\n                        <DropdownGroups text=\"Группа\" groups_distance={groups_distance} groups_fulltime={groups_fulltime} getGroupFromDropdown={this.getGroupFromDropdown} study_mode={study_mode}/>\r\n                    </div>\r\n                    <div className=\"Dropdown\">\r\n                        <DropdownWeeks text=\"Неделя\" weeks={weeks} weeks_fulltime={this.weeks_fulltime} getWeekFromDropdown={this.getWeekFromDropdown} getWeekFromDropdownFulltime={this.getWeekFromDropdownFulltime} ref={this.myRef} study_mode={study_mode} />\r\n                    </div>\r\n                    <div className=\"Nngu\">\r\n                        <img src=\"logo_nngu.png\" alt=\"logo\" />\r\n                        <div className=\"text\">АФ ННГУ ИМ. Н.И. ЛОБАЧЕВСКОГО</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Schedule-wrapper\">\r\n                    <div className=\"Schedule-row\" id=\"0\">\r\n                        <div className=\"Schedule-cell\" id=\"left\">\r\n                        </div>\r\n                            {days.map((day) => \r\n                                <ScheduleCellWithWeekDays \r\n                                    day={day}\r\n                                    key={day.day}\r\n                                    study_mode={study_mode}\r\n                                    selected_week_fulltime={selected_week_fulltime}\r\n                                />\r\n                            )\r\n                            }\r\n                    </div>\r\n                    {\r\n                        class_timetable.map(t => \r\n                            <ScheduleRowWithContent \r\n                                key={t.id}\r\n                                row_number={t.id}\r\n                                days={days}\r\n                                lessons={study_mode === 'distance' ? lessons_distance : lessons_fulltime}\r\n                                study_mode={study_mode}\r\n                                selected_group={selected_group}\r\n                                selected_group_fulltime={selected_group_fulltime}\r\n                                selected_week_fulltime={selected_week_fulltime}\r\n                                t={t}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"Footer\">\r\n                    <Link to=\"./admin\"><span role=\"img\" aria-label=\"edit\">✍</span> Администраторам</Link>\r\n                    <a href=\"https://github.com/semaphore8\"  target=\"_blank\" rel=\"noopener noreferrer\">© 2019 S. Bliznyuk <span role=\"img\" aria-label=\"code\">👨‍💻</span></a>\r\n                </div>\r\n            </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default App;","// returns an array with months spelling names ['February'] or ['Feb.', '-', 'Mar.']\r\n\r\nexport default function getMonthsNames(days) {\r\n    let months = [];\r\n    let d1 = new Date(Date.parse(days[0]['date']));\r\n    let d2 = new Date(Date.parse(days[days.length - 1]['date']));\r\n    let m1 = d1.getMonth();\r\n    let m2 = d2.getMonth();\r\n    if (m1 === m2) \r\n    months.push(d1.toLocaleDateString('RU-ru', {month: 'long'}))\r\n    else {\r\n    months.push(d1.toLocaleDateString('RU-ru', {month: 'short'}));\r\n    months.push(' - ');\r\n    months.push(d2.toLocaleDateString('RU-ru', {month: 'short'}));\r\n    }\r\n\r\n    return months;\r\n}","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nexport default function RadioButtonsGroup(props) {\r\n    \r\n    return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">{props.label}</FormLabel>\r\n        <RadioGroup aria-label=\"term\" name=\"term\" value={props.termValue} onChange={props.handleChange} row={true}>\r\n          {props.choices.map(term => \r\n              <FormControlLabel value={term.number} key={term.number} control={<Radio />} label={term.number} labelPlacement=\"end\"/>\r\n          )}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function ComboBox(props) {\r\n    return (\r\n        <Autocomplete\r\n        autoHighlight={props.autoHighlight}\r\n        onChange={props.handleChange}\r\n        clearText={props.clearText}\r\n        noOptionsText={props.noOptionsText}\r\n        id={props.label}\r\n        options={props.options}\r\n        getOptionLabel={props.getOptionLabel}\r\n        disableClearable={true}\r\n        style={props.style}\r\n        renderInput={params => <TextField {...params} label={props.label} variant=\"outlined\" />}\r\n        />\r\n    );\r\n}","import React from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function SimpleTable(props) {\r\n    const classes = props.useStyles();\r\n\r\n    return (\r\n        <TableContainer className={classes.root} component={Paper} variant=\"outlined\" style={{ marginTop: 8 }}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell>{props.titles[0]}</TableCell>\r\n                {\r\n                    props.titles.slice(1,).map(title =>\r\n                        <TableCell align=\"right\" key={title}>{title}</TableCell>\r\n                    )\r\n                }\r\n            </TableRow>\r\n            </TableHead>\r\n            {\r\n                props.loads &&\r\n                <TableBody>\r\n                    {props.loads.map((load, index) => (\r\n                        <TableRow key={index}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {load.subject_name.name + ' - ' + load.subject_name.s_type}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{load.hours_count}</TableCell>\r\n                        <TableCell align=\"right\">{props.lessons.filter(lesson => lesson.subject.name === load.subject_name.name && lesson.subject.s_type === load.subject_name.s_type).length*2}</TableCell>\r\n                        <TableCell align=\"right\">{props.study_mode === 'distance' ? load.hours_count/props.selectedTerm.weeks_count_distance : load.hours_count/props.selectedTerm.weeks_count_fulltime}</TableCell>\r\n                        <TableCell align=\"right\">{props.study_mode === 'distance' ? load.hours_count/(props.selectedTerm.weeks_count_distance*2) : load.hours_count/(props.selectedTerm.weeks_count_fulltime*2)}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            }\r\n        </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n\r\nexport default function SimpleSelect(props) {\r\n  const classes = props.useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"outlined\" className={classes.formControl} disabled={props.disabled === true ? true : false}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">{props.label}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={props.value}\r\n          onChange={props.handleChange}\r\n          label={props.label}\r\n        >\r\n        {   props.values && \r\n            props.values.map((value, index) =>\r\n                <MenuItem value={value} key={index}>{value}</MenuItem>\r\n            )\r\n        }\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","// Try edit message\r\nexport default function getFreeScheduleSlotsArray(studyMode, days, lessons, selectedWeekParity, speakerClassesDistance, speakerClassesFulltime, speakerBlockedSlotsDistance, speakerBlockedSlotsFulltime) {\r\n  var res = days.map(d => d)\r\n  for (let day of res) {\r\n    \r\n    // add classes to an array\r\n\r\n    day.classes_count = '';\r\n    day.classes=[]\r\n    for (let i of [1,2,3,4,5,6]) {\r\n      day.classes.push(\r\n  \t\t\t{\r\n  \t\t\t\t'number': `${i}`,\r\n  \t\t\t\t'lesson': false,\r\n  \t\t\t\t'speaker_is_free': true,\r\n  \t\t\t\t'classroom_is_free': true,\r\n  \t\t\t\t'class_in_streak': null,\r\n  \t\t\t}\r\n      );\r\n    }\r\n  \r\n\r\n  // handle \"lesson\" and \"class_in_streak\" properties\r\n  \r\n    if (studyMode === \"distance\") {\r\n      for (let l of lessons) {\r\n        for (let c in day.classes) {\r\n          if (l.date_day === day.date && l.class_number === day.classes[c].number) \r\n          {\r\n            day.classes[c].lesson = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n\r\n\r\n\r\n \r\n\r\n  \r\n    if (studyMode === \"fulltime\") {\r\n      for (let l of lessons) {\r\n        for (let c in day.classes) {\r\n          if (l.week_parity === selectedWeekParity && l.day === day.wday_en && l.class_number === day.classes[c].number)\r\n          {\r\n            day.classes[c].lesson = true;\r\n            try {day.classes[parseInt(c)+1].class_in_streak = true} catch(e) {};\r\n            try {day.classes[parseInt(c)-1].class_in_streak = true} catch(e) {};\r\n            for (let i = parseInt(c)+2; i <=6; i++) {\r\n              if (day.classes[parseInt(c)+1].lesson !== true) {\r\n                try {day.classes[i].class_in_streak = false} catch(e) {};\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n\r\n    // handle \"classes_count\"\r\n\r\n      var i = 0;\r\n      for (let c of day.classes) {\r\n        c.lesson === true && i++;\r\n      }\r\n      day.classes_count = i;\r\n      i = 0;\r\n\r\n    // handle \"speaker_is_free\" \r\n\r\n      /*check speaker's distance classes*/\r\n      if (studyMode === \"distance\") {\r\n        for (let c of speakerClassesDistance) {\r\n          if (c.date_day === day.date) {\r\n            for (let cl of day.classes) {\r\n              if (c.class_number === cl.number) cl.speaker_is_free = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n      /*check speaker's fulltime classes*/\r\n  for (let c of speakerClassesFulltime) {\r\n    if (c.day === day.wday_en && c.week_parity === selectedWeekParity) {\r\n      for (let cl of day.classes) {\r\n        if (c.class_number === cl.number) cl.speaker_is_free = false\r\n      }\r\n    }\r\n  }\r\n      /*check speaker's blocked class spots*/\r\n      if (studyMode === \"distance\") {\r\n  for (let s of speakerBlockedSlotsDistance) {\r\n    if (s.date_day === day.date) {\r\n      for (let cl of day.classes) {\r\n        if (s.class_number.toString() === cl.number) cl.speaker_is_free = false\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n  for (let s of speakerBlockedSlotsFulltime) {\r\n    if (s.day === day.wday_en && s.week_parity === selectedWeekParity) {\r\n      for (let cl of day.classes) {\r\n        if (s.class_number.toString() === cl.number) cl.speaker_is_free = false\r\n      }\r\n    }\r\n  }\r\n\r\n  }\r\n\r\n  // handle \"class_in_streak\" prop\r\n  for (let day of res) {\r\n    for (let c of day.classes) {\r\n      if (c.lesson === true) {\r\n        try {if (day.classes[parseInt(c.number)].lesson !== true) day.classes[parseInt(c.number)].class_in_streak = true} catch(e) {};\r\n        try {if (day.classes[parseInt(c.number)-2].lesson !== true) day.classes[parseInt(c.number)-2].class_in_streak = true} catch(e) {};\r\n      }\r\n      else {\r\n          if (day.classes_count !== 0 && c.class_in_streak !== true && (day.classes[parseInt(c.number)] ? day.classes[parseInt(c.number)].lesson !== true : true)) {c.class_in_streak = false} \r\n      } \r\n    }\r\n  }\r\n\r\n  return res\r\n}","import { createContext, useContext } from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nexport const useAuth = () => useContext(AuthContext)","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RadioButtonsGroup from './Components/RadioButtonsGroup'\r\nimport ComboBox from './Components/ComboBox'\r\nimport LoadsTable from './Components/LoadsTable'\r\nimport Select from './Components/Select'\r\nimport { ApiURI, class_timetable } from '../AppConfig';\r\nimport getWeeksDays from '../Utils/GetWeeksDays';\r\nimport ScheduleRowWithContent from '../Components/Body/ScheduleRowWithContent';\r\nimport ScheduleCellWithWeekDays from '../Components/Body/ScheduleCellWithWeekDays';\r\nimport './Admin.css';\r\nimport getWeekNumber from '../Utils/GetWeekNumber';\r\nimport getFreeScheduleSlotsArray from '../Utils/GetFreeScheduleSlotsArray';\r\nimport addClassroomAvailabilityToScheduleFreeSlotsArray from '../Utils/AddClassroomAvailabilityToScheduleFreeSlotsArray';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useAuth } from '../Context/Auth'\r\n\r\nexport default function Admin() {\r\n    \r\n    // Constants & vars\r\n\r\n    const loadTitles = [\r\n        'Предмет', \r\n        'Количество часов', \r\n        'Часов в расписании', \r\n        'Часов в неделю', \r\n        'Пар в неделю'\r\n    ]\r\n\r\n    const { authTokens } = useAuth();\r\n\r\n    // Components styles\r\n\r\n    const loadTableStyles = makeStyles({\r\n        table: {\r\n            maxWidth: 950,\r\n        },\r\n        root: {\r\n            maxWidth: 950,\r\n        },\r\n    });\r\n\r\n    const selectStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n          marginRight: theme.spacing(1),\r\n          minWidth: 150,\r\n        },\r\n        selectEmpty: {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n      }));\r\n\r\n    // State hooks\r\n    \r\n    const [selectedGroup, setSelectedGroup] = React.useState('');\r\n    const [groupChoices, setGroupChoices] = React.useState([]);\r\n    \r\n    const [selectedTerm, setSelectedTerm] = React.useState('');\r\n    const [termChoices, setTermChoices] = React.useState([]);\r\n    \r\n    const [loads, setLoads] = React.useState([]);\r\n\r\n    const [lessons, setLessons] = React.useState([]);\r\n    \r\n    const [selectedWeek, setSelectedWeek] = React.useState('');\r\n    const [selectedWeekParity, setSelectedWeekParity] = React.useState('');\r\n    \r\n    const [days, setDays] = React.useState([]);\r\n\r\n    const [selectedSubject, setSelectedSubject] = React.useState('');\r\n    const [selectedSpeaker, setSelectedSpeaker] = React.useState('');\r\n    const [selectedClassroom, setSelectedClassroom] = React.useState('');\r\n    const [speakerChoices, setSpeakerChoices] = React.useState([]);\r\n    const [classroomChoices, setClassroomChoices] = React.useState([]);\r\n\r\n    const [speakerClassesDistance, setSpeakerClassesDistance] = React.useState([]);\r\n    const [speakerClassesFulltime, setSpeakerClassesFulltime] = React.useState([]);\r\n    const [speakerBlockedSlotsDistance, setSpeakerBlockedSlotsDistance] = React.useState([]);\r\n    const [speakerBlockedSlotsFulltime, setSpeakerBlockedSlotsFulltime] = React.useState([]);\r\n\r\n    const [scheduleFreeSlotsArray, setScheduleFreeSlotsArray] = React.useState();\r\n    \r\n    const [selectedDate, setSelectedDate] = React.useState();\r\n    const [selectedDay, setSelectedDay] = React.useState();\r\n    const [selectedClassnumber, setSelectedClassnumber] = React.useState();\r\n    const [scheduleUpdated, setScheduleUpdated] = React.useState();\r\n\r\n    // context hooks\r\n    \r\n    const { setAuthTokens } = useAuth();\r\n\r\n    // handle components changes\r\n\r\n    const handleChangeTerm = (event) => {\r\n        setSelectedTerm(termChoices.filter(term => term.number === event.target.value)[0]);\r\n        setSelectedWeek('');\r\n        setSelectedSpeaker('');\r\n        setSelectedClassroom('');\r\n        setSelectedSubject('');\r\n        setScheduleFreeSlotsArray();\r\n        clearSelectedSlot();\r\n    };\r\n    \r\n    const handleChangeGroup = (event, value) => {\r\n        value ? setSelectedGroup(value) : setSelectedGroup('');\r\n        setSelectedWeek('');\r\n        setSelectedSpeaker('');\r\n        setSelectedClassroom('');\r\n        setSelectedSubject('');\r\n        setScheduleFreeSlotsArray();\r\n        clearSelectedSlot();\r\n    }\r\n    \r\n    const handleChangeWeek = (event) => {\r\n        setSelectedWeek(event.target.value);\r\n        clearSelectedSlot();\r\n    };\r\n\r\n    const handleChangeSpeaker = (event) => {\r\n        setSelectedSpeaker(event.target.value);\r\n        clearSelectedSlot();\r\n    };\r\n    \r\n    const handleChangeSubject = (event, value) => {\r\n        setSelectedSubject(value.id);\r\n        setSelectedSpeaker('');\r\n        setSelectedClassroom('');\r\n        clearSelectedSlot();\r\n    };\r\n\r\n    const handleChangeClassroom = (event) => {\r\n        setSelectedClassroom(event.target.value);\r\n        clearSelectedSlot();\r\n    };\r\n\r\n    const handleChangeDate = (target) => {\r\n        if (selectedClassroom) {\r\n            setSelectedDate(target.attributes.date.value);\r\n        }\r\n    };\r\n\r\n    const handleChangeDay = (target) => {\r\n        if (selectedClassroom) {\r\n            setSelectedDay(target.attributes.day.value);\r\n        }\r\n    };\r\n\r\n    const handleChangeClassnumber = (target) => {\r\n        if (selectedClassroom) {\r\n            setSelectedClassnumber(target.attributes.classnumber.value);\r\n        }\r\n    };\r\n\r\n    const handleDateDelete = () => {\r\n        setSelectedDate();\r\n    };\r\n\r\n    const handleDayDelete = () => {\r\n        setSelectedDay();\r\n    };\r\n\r\n    const handleClassnumberDelete = () => {\r\n        setSelectedClassnumber();\r\n    };\r\n\r\n    const clearSelectedSlot = () => {\r\n        handleDateDelete();\r\n        handleDayDelete();\r\n        handleClassnumberDelete();\r\n    }\r\n\r\n    const handleLogOut = () => {\r\n        setAuthTokens();\r\n        localStorage.setItem(\"tokens\", \"\")\r\n    }\r\n\r\n    // data fetching\r\n\r\n    const [subjectInfoLoading, setSubjectInfoLoading] = React.useState(false);\r\n    const [speakerDataLoaded, setSpeakerDataLoaded] = React.useState(false);\r\n    const [speakerDataLoading, setSpeakerDataLoading] = React.useState(false);\r\n    const [groupsAndTermsLoading, setGroupsAndTermsLoading] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setGroupsAndTermsLoading(true);            \r\n            await fetch(ApiURI + '/groups/')\r\n            .then(response => response.json())\r\n            .then(result => setGroupChoices(result));\r\n            await fetch(ApiURI + '/terms/')\r\n            .then(response => response.json())\r\n            .then(result => setTermChoices(result))\r\n            setGroupsAndTermsLoading(false);\r\n        };\r\n        fetchData();\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n        if (selectedTerm && selectedGroup) {\r\n            const fetchData = async () => {\r\n                await fetch(ApiURI + '/loads/')\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    setLoads(\r\n                        result.filter(load => load.group === selectedGroup.id && load.term === selectedTerm.id)\r\n                    )\r\n                });\r\n            };\r\n            fetchData();\r\n        };\r\n\r\n        if (selectedTerm && selectedGroup.mode_of_study === 'distance') {\r\n            const fetchData = async () => {\r\n                await fetch(ApiURI + '/lessons_distance/')\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    setLessons(\r\n                        result.filter(lesson => lesson.term === selectedTerm.id)\r\n                    )\r\n                });\r\n                };\r\n                fetchData();\r\n            };\r\n            \r\n        if (selectedTerm && selectedGroup.mode_of_study === 'fulltime') {\r\n            const fetchData = async () => {\r\n                await fetch(ApiURI + '/lessons_fulltime/')\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    setLessons(\r\n                        result.filter(lesson => lesson.term === selectedTerm.id)\r\n                    )\r\n                });\r\n                };\r\n                fetchData();\r\n            };\r\n\r\n    }, [selectedGroup, selectedTerm, scheduleUpdated])\r\n\r\n    useEffect(() => {\r\n        if (selectedSubject) {\r\n            const fetchData = async () => {\r\n                setSubjectInfoLoading(true);\r\n                const result = await fetch(ApiURI + '/subjects/' + selectedSubject)\r\n                .then(response => response.json());\r\n                setSpeakerChoices(result.speaker_list);\r\n                setClassroomChoices(result.classrooms_list);\r\n                setSubjectInfoLoading(false);\r\n            };\r\n            fetchData();\r\n        };\r\n    }, [selectedSubject])\r\n\r\n    useEffect(() => {\r\n        if (selectedSpeaker) {\r\n            const fetchData = async () => {\r\n                setSpeakerDataLoading(true);\r\n                await fetch(ApiURI + '/lessons_distance/')\r\n                .then(response => response.json())\r\n                .then(result => \r\n                        setSpeakerClassesDistance(result.filter(c => c.speaker === selectedSpeaker && c.term === selectedTerm.id))\r\n                    );\r\n                await fetch(ApiURI + '/lessons_fulltime/')\r\n                .then(response => response.json())\r\n                .then(result => \r\n                        setSpeakerClassesFulltime(result.filter(c => c.speaker === selectedSpeaker && c.term === selectedTerm.id))\r\n                    );\r\n                await fetch(ApiURI + '/speakerblockedtimefulltime/')\r\n                .then(response => response.json())\r\n                .then(result => \r\n                        setSpeakerBlockedSlotsFulltime(result.filter(slot => slot.speaker_info.name === selectedSpeaker))\r\n                    );\r\n                await fetch(ApiURI + '/speakerblockedtimedistance/')\r\n                .then(response => response.json())\r\n                .then(result => \r\n                        setSpeakerBlockedSlotsDistance(result.filter(slot => slot.speaker_info.name === selectedSpeaker))\r\n                    );\r\n                setSpeakerDataLoading(false);\r\n                setSpeakerDataLoaded(true);\r\n            };\r\n            fetchData();\r\n        };\r\n    }, [selectedSpeaker, selectedTerm])\r\n\r\n\r\n    // effect hooks\r\n\r\n    useEffect(() => {\r\n        if (speakerDataLoaded) {\r\n            var group_lessons = lessons.filter(l => l.study_group === selectedGroup.name);\r\n            setScheduleFreeSlotsArray(getFreeScheduleSlotsArray(selectedGroup.mode_of_study, days, group_lessons, selectedWeekParity, speakerClassesDistance, speakerClassesFulltime, speakerBlockedSlotsDistance, speakerBlockedSlotsFulltime));\r\n\r\n            setSpeakerDataLoaded(false);\r\n        }\r\n    }, [speakerDataLoaded, days, lessons, selectedWeekParity, speakerClassesDistance, speakerClassesFulltime, speakerBlockedSlotsDistance, speakerBlockedSlotsFulltime, selectedGroup.name])\r\n\r\n    useEffect(() => {\r\n        if (selectedWeek) {\r\n            selectedWeek === \"Чётная\" && setSelectedWeekParity('even');\r\n            selectedWeek === \"Нечётная\" && setSelectedWeekParity('uneven');\r\n            setDays(getWeeksDays(selectedWeek, selectedGroup.mode_of_study));\r\n            let date = new Date(selectedWeek);\r\n            let selectedWeekNumber = getWeekNumber(date);\r\n            if (selectedWeekNumber % 2 === 0) \r\n            setSelectedWeekParity('even')\r\n            else if (selectedWeekNumber % 2 === 1) \r\n            setSelectedWeekParity('uneven')\r\n        }\r\n\r\n        if (selectedWeek && selectedSubject && selectedSpeaker) {\r\n            var group_lessons = lessons.filter(l => l.study_group === selectedGroup.name);\r\n            var updated_days = getWeeksDays(selectedWeek, selectedGroup.mode_of_study);\r\n            setScheduleFreeSlotsArray(getFreeScheduleSlotsArray(selectedGroup.mode_of_study, updated_days, group_lessons, selectedWeekParity, speakerClassesDistance, speakerClassesFulltime, speakerBlockedSlotsDistance, speakerBlockedSlotsFulltime));\r\n        }\r\n    }, [selectedWeek, selectedGroup.mode_of_study, selectedWeekParity, speakerClassesDistance, speakerClassesFulltime, speakerBlockedSlotsDistance, speakerBlockedSlotsFulltime, lessons, selectedGroup.name, selectedSpeaker, selectedSubject])\r\n\r\n    useEffect(() => {\r\n        if (selectedSpeaker) {\r\n            setScheduleFreeSlotsArray(addClassroomAvailabilityToScheduleFreeSlotsArray(selectedGroup.mode_of_study, selectedClassroom, scheduleFreeSlotsArray, lessons, selectedWeekParity))\r\n        }\r\n    }, [selectedClassroom])\r\n    \r\n    // publishing classes\r\n\r\n    function publishClass() {\r\n\r\n        let data\r\n        let request\r\n        console.log(authTokens)\r\n\r\n\r\n        if (selectedGroup.mode_of_study === 'distance') {\r\n            data = JSON.stringify({\r\n                \"date_day\": selectedDate,\r\n                \"class_number\": parseInt(selectedClassnumber),\r\n                \"speaker\": speakerChoices.filter(s => s.name === selectedSpeaker)[0].id,\r\n                \"subject\": selectedSubject,\r\n                \"classroom\": classroomChoices.filter(c => c.name === selectedClassroom)[0].id,\r\n                \"study_group\": selectedGroup.id,\r\n                \"term\": selectedTerm.id\r\n            })\r\n            request = new Request(ApiURI + '/post_distance_lesson/', {method: 'POST', body: data, headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${authTokens}`}});\r\n        }\r\n\r\n        if (selectedGroup.mode_of_study === 'fulltime') {\r\n            data = JSON.stringify({\r\n                \"day\": selectedDay,\r\n                \"week_parity\": selectedWeekParity,\r\n                \"class_number\": parseInt(selectedClassnumber),\r\n                \"speaker\": speakerChoices.filter(s => s.name === selectedSpeaker)[0].id,\r\n                \"subject\": selectedSubject,\r\n                \"classroom\": classroomChoices.filter(c => c.name === selectedClassroom)[0].id,\r\n                \"study_group\": selectedGroup.id,\r\n                \"term\": selectedTerm.id\r\n            })\r\n            request = new Request(ApiURI + '/post_fulltime_lesson/', {method: 'POST', body: data, headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${authTokens}`}});\r\n        }\r\n\r\n        console.log('request', request)\r\n\r\n        fetch(request)\r\n        .then(response => response.text())\r\n        .then(result => console.log('response', result))\r\n        .catch(error => console.log('error', error));\r\n\r\n        setScheduleUpdated(Math.random());\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"Admin\"> \r\n            <div className=\"header\">\r\n                <Link to=\"/\">Вернуться к расписанию <span role=\"img\" aria-label=\"hat\">🎓</span></Link>  \r\n                <Link to=\"/admin\" onClick={handleLogOut}>Выйти <span role=\"img\" aria-label=\"door\">🚪</span></Link>  \r\n            </div>\r\n                <h2>\r\n                Административный интерфейс\r\n                </h2>\r\n            <div className=\"selects\">\r\n                {\r\n                    groupsAndTermsLoading ? (<div className=\"helptext\"><i>Загрузка учебных групп... </i></div>) : (\r\n                        <ComboBox \r\n                            label=\"Группа\"\r\n                            options={groupChoices}\r\n                            clearText=\"Очистить\"\r\n                            noOptionsText=\"Группа не найдена\"\r\n                            autoHighlight={true}\r\n                            handleChange={handleChangeGroup}\r\n                            getOptionLabel={option => option.name}\r\n                            style={{ width: 170, marginRight: 16 }}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    groupsAndTermsLoading ? (<div className=\"helptext\"><i>Загрузка семестров...</i></div>) : (\r\n                        <RadioButtonsGroup \r\n                            label=\"Семестр\"\r\n                            handleChange={handleChangeTerm}\r\n                            choices={termChoices}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n            {\r\n                (selectedTerm && selectedGroup) && \r\n                    <LoadsTable\r\n                        titles={loadTitles}\r\n                        useStyles={loadTableStyles}\r\n                        lessons={lessons}\r\n                        loads={loads}\r\n                        selectedTerm={selectedTerm}\r\n                        study_mode={selectedGroup.mode_of_study}\r\n                    />\r\n            }\r\n            <br />\r\n            <div className=\"selects\">\r\n                {\r\n                    (selectedGroup && selectedTerm) &&\r\n                    <div>\r\n                        <Select\r\n                        useStyles={selectStyles}\r\n                        handleChange={handleChangeWeek}\r\n                        value={selectedWeek}\r\n                        label=\"Неделя\"\r\n                        values={selectedGroup.mode_of_study === 'distance' ? selectedTerm.weeks : ['Чётная', 'Нечётная']}\r\n                        />\r\n                    </div>\r\n                }\r\n                {\r\n                    selectedWeek &&\r\n                    <ComboBox \r\n                            label=\"Предмет\"\r\n                            options={loads.map(load => load.subject_name)}\r\n                            clearText=\"Очистить\"\r\n                            noOptionsText=\"Предмет не найден. Внесите хотя бы один предмет в учебный график.\"\r\n                            autoHighlight={true}\r\n                            handleChange={handleChangeSubject}\r\n                            getOptionLabel={option => option.name + ' - ' + option.s_type}\r\n                            style={{ width: 400, marginRight: 8 }}\r\n                    />\r\n                }\r\n                {\r\n                    (selectedSubject && selectedWeek && subjectInfoLoading) && \r\n                        <div className=\"helptext\"><i>Загрузка информации о предмете...</i></div> \r\n                }\r\n                {\r\n                    (selectedSubject && selectedWeek && !subjectInfoLoading) &&\r\n                            <div className=\"selects\">\r\n                                <Select\r\n                                    useStyles={selectStyles}\r\n                                    handleChange={handleChangeSpeaker}\r\n                                    value={selectedSpeaker}\r\n                                    label=\"Преподаватель\"\r\n                                    values={speakerChoices.map(speaker => speaker.name)}\r\n                                />\r\n                            </div>\r\n                }\r\n                {\r\n                    selectedSpeaker &&\r\n                    <div className=\"selects\">\r\n                        <Select\r\n                            useStyles={selectStyles}\r\n                            handleChange={handleChangeClassroom}\r\n                            value={selectedClassroom}\r\n                            label=\"Аудитория\"\r\n                            values={classroomChoices.map(classroom => classroom.name)}\r\n                        />\r\n                    </div>\r\n                }\r\n                {\r\n                    (selectedSpeaker && selectedClassroom) &&\r\n                    <Paper elevation={0}>\r\n                    <div className=\"selects\" style={{ height: 56 }}>\r\n                        {\r\n                            (selectedSpeaker && selectedClassroom && selectedDate && selectedGroup.mode_of_study === 'distance') && \r\n                                <Tooltip title=\"Выбранная дата\" arrow>\r\n                                    <Chip variant=\"outlined\" label={selectedDate} onDelete={handleDateDelete} style={{ margin: 8, alignSelf: \"center\" }}/>\r\n                                </Tooltip>\r\n                        }\r\n                        {\r\n                            (selectedSpeaker && selectedClassroom && selectedGroup.mode_of_study === 'fulltime') && \r\n                                <Tooltip title=\"Выбранная неделя\" arrow>\r\n                                    <Chip variant=\"outlined\" label={selectedWeekParity === 'even' ? 'Чётная' : 'Нечётная'} style={{ margin: 8 }}/>\r\n                                </Tooltip>\r\n                        }\r\n                        {\r\n                            (selectedSpeaker && selectedClassroom && selectedDay && selectedGroup.mode_of_study === 'fulltime') && \r\n                                <Tooltip title=\"Выбранный день\" arrow>\r\n                                    <Chip variant=\"outlined\" label={selectedDay} onDelete={handleDayDelete} style={{ marginRight: 8, alignSelf: \"center\" }}/>\r\n                                </Tooltip>\r\n                        }\r\n                        {\r\n                            (selectedSpeaker && selectedClassroom && selectedClassnumber) && \r\n                                <Tooltip title=\"Выбранный номер пары\" arrow>\r\n                                    <Chip variant=\"outlined\" label={selectedClassnumber} onDelete={handleClassnumberDelete} style={{ marginRight: 8, alignSelf: \"center\" }}/>\r\n                                </Tooltip>\r\n                        }\r\n                        {\r\n                            ((selectedSpeaker && selectedClassroom && selectedDate && selectedClassnumber) || ( selectedSpeaker && selectedClassroom && selectedDay && selectedWeekParity && selectedClassnumber )) ?\r\n                            <>\r\n                                <Tooltip title=\"Опубликовать занятие в расписание\" arrow>\r\n                                    <Button variant=\"contained\" color=\"primary\" style={{ margin: 8 }} onClick={publishClass}>Опубликовать занятие</Button>\r\n                                </Tooltip>\r\n                                {/* <Tooltip title=\"Добавить занятие как черновик\" arrow>\r\n                                    <Button variant=\"contained\" style={{ margin: 8 }}>Добавить черновик</Button>\r\n                                </Tooltip>\r\n                                <Tooltip title=\"Удалить занятие\" arrow>\r\n                                    <Button color=\"secondary\" style={{ margin: 8 }}>Удалить занятие</Button>\r\n                                </Tooltip> */}\r\n                            </>\r\n                            :\r\n                            (selectedSpeaker && selectedClassroom) &&\r\n                            <Typography variant=\"body1\" display=\"inline\" style={{ marginRight: 8 }}><i>Выберите свободную ячейку в расписании</i></Typography>\r\n                        }\r\n                    </div>\r\n                    </Paper>\r\n                }\r\n            </div>\r\n            <div className=\"admin-schedule\">\r\n                {\r\n                    selectedWeek &&\r\n                    <Paper variant=\"outlined\" style={{ marginTop: 8 }}>\r\n                        <div className=\"Schedule-wrapper\">\r\n                            <div className=\"Schedule-row\" id=\"0\">\r\n                                <div className=\"Schedule-cell\" id=\"left\">\r\n                                </div>\r\n                                    {days.map((day) => \r\n                                        <ScheduleCellWithWeekDays \r\n                                            day={day}\r\n                                            key={day.day}\r\n                                            study_mode={selectedGroup.mode_of_study}\r\n                                            selected_week_fulltime={selectedWeek}\r\n                                        />\r\n                                    )\r\n                                    }\r\n                            </div>\r\n                            {\r\n                                class_timetable.map(t => \r\n                                    <ScheduleRowWithContent \r\n                                        key={t.id}\r\n                                        row_number={t.id}\r\n                                        days={days}\r\n                                        lessons= {lessons}\r\n                                        study_mode={selectedGroup.mode_of_study}\r\n                                        selected_group={selectedGroup.name}\r\n                                        selected_group_fulltime={selectedGroup.name}\r\n                                        selected_week_fulltime={selectedWeek === 'Чётная' ? 'even' : 'uneven'}\r\n                                        t={t}\r\n                                        free_slots_array={scheduleFreeSlotsArray}\r\n                                        handleChangeDate={handleChangeDate}\r\n                                        handleChangeDay={handleChangeDay}\r\n                                        handleChangeClassnumber={handleChangeClassnumber}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n            }","export default function addClassroomAvailabilityToScheduleFreeSlotsArray (studyMode, selectedClassroom, scheduleFreeSlotsArray, lessons, selectedWeekParity) {\r\n    var res = scheduleFreeSlotsArray.map(d => d)    \r\n    for (let day of res) {\r\n        for (let l of lessons) {\r\n            if (studyMode === 'fulltime') {\r\n                if (l.week_parity === selectedWeekParity && l.day === day.wday_en && l.classroom === selectedClassroom) {\r\n                            day.classes[parseInt(l.class_number)-1].classroom_is_free = false\r\n                    }\r\n            }\r\n\r\n            if (studyMode === 'distance') {\r\n                if (l.date_day === day.date && l.classroom === selectedClassroom) {\r\n                            day.classes[parseInt(l.class_number)-1].classroom_is_free = false\r\n                    }\r\n            }\r\n            }\r\n        }\r\n        return res\r\n    }","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./Context/Auth\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const { authTokens } = useAuth();\r\n  const authHookContent = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authTokens ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { referer: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Card, TextField, Button, Typography, CardContent, CardActions, CardHeader, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert } from '@material-ui/lab'\r\nimport { useAuth } from '../Context/Auth';\r\nimport '../Admin/Admin.css'\r\nimport { ApiURI } from '../AppConfig'\r\nimport axios from 'axios'\r\n\r\n// card styles\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 330,\r\n      textAlign: 'center',\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    header: {\r\n        marginTop: 12,\r\n        marginBottom: 12,\r\n    },\r\n    content: {\r\n        paddingBottom: 0,\r\n    },\r\n    bodyText: {\r\n        marginBottom: 8,\r\n    },\r\n    input: {\r\n        marginBottom: 12,\r\n    },\r\n    cardActions: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        marginBottom: 6,\r\n    },\r\n    alert: {\r\n        maxWidth: 400,\r\n        position: 'absolute',\r\n        top: '90%',\r\n        left: '50%',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n  });\r\n\r\nfunction Login(props) {\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const { setAuthTokens } = useAuth();\r\n    const referer = props.location.state !== undefined ? props.location.state.referer : '/admin/';\r\n    const classes = useStyles();\r\n    const [credsEmpty, setCredsEmpty] = useState(false);\r\n\r\n\r\n    function postLogin(event) {\r\n        event.preventDefault();\r\n        setIsError(false);\r\n        setError(\"\");\r\n        \r\n        if (!userName || !password) {\r\n            setCredsEmpty(true);\r\n        } else {\r\n            setCredsEmpty(false);\r\n            axios.post(ApiURI + \"/api/token/\", {\r\n                \"username\": userName,\r\n                \"password\": password\r\n                })\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                setAuthTokens(response.data.access);\r\n                setLoggedIn(true);\r\n                    } \r\n                else {\r\n                    setIsError(true);\r\n                    setError(\"Ошибка. Обратитесь к администратору\");\r\n                }\r\n                })\r\n                .catch(e => {\r\n                        setIsError(true);\r\n                        if (e.response && e.response.status === 401) {setError(\"Введены неправильные учетные данные\")}\r\n                        else if (!error && !e.response) {setError(\"Сервер аутентификации недоступен\")}\r\n                    });\r\n        }\r\n    }\r\n  \r\n    if (isLoggedIn) {\r\n      return <Redirect to={referer} />;\r\n    }\r\n  \r\n    return (\r\n        <div className=\"Login\">\r\n        <Link to=\"./\">Вернуться к расписанию <span role=\"img\" aria-label=\"hat\">🎓</span></Link>  \r\n        {\r\n            credsEmpty && <Alert className={classes.alert} severity=\"error\">Введите учетные данные</Alert>\r\n        }\r\n        {\r\n            isError && <Alert className={classes.alert} severity=\"error\">{error}</Alert>\r\n        }\r\n        <Card className={classes.root} raised={true}>\r\n            <form noValidate autoComplete=\"on\" onSubmit={postLogin}>\r\n            <CardHeader title=\"✍ Система управления расписанием\" className={classes.header}/>\r\n            <CardContent className={classes.content}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" gutterBottom className={classes.bodyText}>\r\n                    Введите учетные данные\r\n                </Typography>\r\n                <TextField \r\n                    autoFocus={true}\r\n                    required={true}\r\n                    className={classes.input}\r\n                    size=\"small\"\r\n                    id=\"userName\" \r\n                    label=\"Имя пользователя\" \r\n                    variant=\"outlined\" \r\n                    value={userName}\r\n                    onChange={e => {\r\n                    setUserName(e.target.value);\r\n                    }}\r\n                />\r\n                <TextField \r\n                    required={true}\r\n                    className={classes.input}\r\n                    size=\"small\"\r\n                    id=\"password\" \r\n                    type=\"password\"\r\n                    label=\"Пароль\" \r\n                    variant=\"outlined\" \r\n                    value={password}\r\n                    onChange={e => {\r\n                        setPassword(e.target.value);\r\n                    }}\r\n                />\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button type=\"submit\" color=\"primary\">\r\n                Войти\r\n                </Button>\r\n            </CardActions>\r\n            </form>\r\n        </Card>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Login;\r\n\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport Admin from './Admin/Admin';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { AuthContext } from './Context/Auth'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport Login from './Login/Login'\r\n\r\n\r\nfunction Routing(props) {\r\n\r\n    const [authTokens, setAuthTokens] = useState();\r\n    \r\n    if (localStorage.getItem(\"tokens\") && authTokens === undefined) {\r\n        setAuthTokens(localStorage.getItem(\"tokens\"))\r\n    }\r\n\r\n    const setTokens = (data) => {\r\n        localStorage.setItem(\"tokens\", JSON.stringify(data));\r\n        setAuthTokens(data);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\r\n            <Router>\r\n                <Route exact path=\"/\" component={App} />\r\n                <PrivateRoute exact path=\"/admin\" component={Admin} />\r\n                <Route path=\"/login\" component={Login} />\r\n            </Router>\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nReactDOM.render(<Routing/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}